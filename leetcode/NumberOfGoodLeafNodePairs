/**
 * https://leetcode.com/problems/number-of-good-leaf-nodes-pairs/description/?envType=daily-question&envId=2024-07-18
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int ans;
    int dis;
    public int countPairs(TreeNode root, int distance) {
        ans=0;
        dis=distance;
        helper(root);
        return ans;
    }
    public int[] helper(TreeNode root){
        int[] current=new int[dis];
        if(root==null)return current;
        int[] left=helper(root.left);
        int[] right=helper(root.right);

        if(root.left==null && root.right==null){
            current[0]=1;
        }
        for(int i=0;i<dis;i++){
            for(int j=0;j+i+1<dis;j++){
                ans+=(left[i]*right[j]);
            }
        }
        for(int i=1;i<dis;i++)current[i]=right[i-1]+left[i-1];
        return current;
    }
}
